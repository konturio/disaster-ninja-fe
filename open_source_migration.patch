diff --git a/configs/config.default.js b/configs/config.default.js
new file mode 100644
index 0000000..466a132
--- /dev/null
+++ b/configs/config.default.js
@@ -0,0 +1,47 @@
+window.konturAppConfig = {
+  API_GATEWAY: 'https://disaster.ninja/active/api',
+  FEATURES_API: 'https://apps.kontur.io/userprofile/features',
+  GRAPHQL_API: 'https://apps.kontur.io/insights-api/graphql',
+  BOUNDARIES_API: 'https://api.kontur.io',
+  REPORTS_API: 'https://disaster.ninja/active/reports',
+  TILES_API: 'https://disaster.ninja/tiles/stats/',
+  REFRESH_INTERVAL_SEC: 300,
+  MAP_ACCESS_TOKEN: '',
+  MAP_BASE_STYLE: 'https://disaster.ninja/tiles/basemap/style_ninja.json',
+  LAYERS_BY_DEFAULT: [
+    'BIV__Kontur OpenStreetMap Quantity',
+    'activeContributors',
+    'eventShape',
+    'focused-geometry',
+  ],
+  AUTOFOCUS_PADDINGS: [16, 300, 16, 336],
+  AUTOFOCUS_ZOOM: 13,
+  FEATURES_BY_DEFAULT: [
+    'events_list',
+    'current_event',
+    'reports',
+    'current_episode',
+    'episode_list',
+    'osm_edit_link',
+    'side_bar',
+    'analytics_panel',
+    'map_layers_panel',
+    'focused_geometry_layer',
+    'map_ruler',
+    'boundary_selector',
+    'draw_tools',
+    'geometry_uploader',
+    'legend_panel',
+    'url_store',
+    'feature_settings',
+    'layers_in_area',
+    'toasts',
+    'interactive_map',
+    'feed_selector',
+    'header',
+    'geocoder',
+    'communities',
+    'tooltip',
+  ],
+  DEFAULT_FEED: 'kontur-public',
+};
diff --git a/package-lock.json b/package-lock.json
index 0660402..825f6c2 100644
Binary files a/package-lock.json and b/package-lock.json differ
diff --git a/package.json b/package.json
index fb3a086..42e4896 100644
--- a/package.json
+++ b/package.json
@@ -16,7 +16,6 @@
     "lint-staged": "lint-staged",
     "test:unit": "ava",
     "test:unit-watch": "ava --watch",
-    "checkapi": "node ./scripts/is-api-working.js",
     "lint": "npm-run-all lint:js lint:css",
     "lint:js": "eslint --quiet  --ext .tsx,.ts src/",
     "lint:css": "stylelint ./src/**/*.css",
diff --git a/src/utils/axios/MockedAuthWrapper.tsx b/src/utils/axios/MockedAuthWrapper.tsx
index e7f0e4b..190dd81 100644
--- a/src/utils/axios/MockedAuthWrapper.tsx
+++ b/src/utils/axios/MockedAuthWrapper.tsx
@@ -1,7 +1,5 @@
 import { ReactNode, useEffect, useState } from 'react';
 import { enableMocking } from '~utils/axios/axiosMockUtils';
-import { setupFeatureFlagsMocking } from '~utils/axios/setupTemporaryMocking';
-import { apiClient } from '~core/index';
 
 /* Use in instead of <AuthWrapper /> */
 function MockedAuthWrapper({
@@ -15,9 +13,6 @@ function MockedAuthWrapper({
     async function initApp() {
       // todo: Remove mocking once backend service will be fully complete
       enableMocking(true);
-      await setupFeatureFlagsMocking(
-        apiClient['apiSauceInstance'].axiosInstance,
-      );
       setInitialized(true);
     }
 
diff --git a/src/utils/axios/setupTemporaryMocking.ts b/src/utils/axios/setupTemporaryMocking.ts
new file mode 100644
index 0000000..7555f34
--- /dev/null
+++ b/src/utils/axios/setupTemporaryMocking.ts
@@ -0,0 +1,18 @@
+import {
+  addMock,
+  setupMocking,
+  getMockKey,
+} from '~utils/axios/axiosMockUtils';
+import { AxiosInstance } from 'axios';
+import appConfig from '~core/app_config';
+
+export function setupDefaultLayersMocking(axiosInstance: AxiosInstance) {
+  const { baseURL } = axiosInstance.defaults;
+  if (baseURL === undefined) return;
+
+  addMock(getMockKey(baseURL, '/layers/defaults/'), {
+    data: appConfig.layersByDefault,
+  });
+
+  setupMocking(axiosInstance);
+}
diff --git a/vite.proxy.ts b/vite.proxy.ts
new file mode 100644
index 0000000..14b5e69
--- /dev/null
+++ b/vite.proxy.ts
@@ -0,0 +1,26 @@
+import { ProxyOptions } from 'vite';
+import packageJson from './package.json';
+const host = 'http://localhost:3000';
+
+export const proxyConfig: Record<string, string | ProxyOptions> = {
+  /**
+   * This proxy help us proxy mapbox tiles requests 
+   * For example, record like:
+   * '/tiles/stats': 'https://disaster.ninja',
+   * will force mapbox take tiles from https://disaster.ninja domain
+   */
+}
+
+
+/* Replace api url that require CORS to proxy */
+export function replaceUrlWithProxy(originalUrl: string): string {
+  return Object.entries(proxyConfig).reduce((url, rule) => {
+    const proxyTarget = typeof rule[1] === 'string' ? rule[1] : rule[1].target;
+    if (proxyTarget) {
+      return url.replace(String(proxyTarget), host);
+    } else {
+      return url;
+    }
+  }, originalUrl);
+}
+

name: Run e2e autotests on ${{ github.event.inputs.env }} by ${{ github.actor }}

env:
  test_atlas_url: 'https://test-apps-ninja01.konturlabs.com/'
  dev_atlas_url: 'https://test-apps-ninja02.konturlabs.com/'
  prod_atlas_url: 'https://atlas.kontur.io/'

  test_disaster_ninja_url: 'https://test-apps-ninja01.konturlabs.com/'
  dev_disaster_ninja_url: 'https://test-apps-ninja02.konturlabs.com/'
  prod_disaster_ninja_url: 'https://disaster.ninja/'

  test_smart_city_url: 'https://test-apps-ninja01.konturlabs.com/'
  dev_smart_city_url: 'https://test-apps-ninja02.konturlabs.com/'
  prod_smart_city_url: 'https://maps.kontur.io/'

  test_oam_url: 'https://test-apps-ninja01.konturlabs.com/'
  dev_oam_url: 'https://test-apps-ninja02.konturlabs.com/'
  prod_oam_url: 'https://new.openaerialmap.org/'

on:
  workflow_dispatch: # Trigger manual run
    inputs:
      env: # Choose env
        type: choice
        required: true
        options:
          - dev
          - test
          - prod

jobs:
  run_tests:
    name: Run e2e tests
    runs-on: ubuntu-latest # Run Ubuntu
    steps:
      - name: Checkout code # Copy repository and move to the needed branch
        uses: actions/checkout@v2

      - name: Setup Node.js # Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21' # Node.js version

      - name: Update playwright and install dependencies # Update playwright and install dependencies
        run: |
          npm install -g playwright@latest
          npm install -D @playwright/test@latest
          npx playwright install --with-deps

      - name: Create .env file # Create .env.playwright.local with secrets
        run: |
          if [[ "${{ github.event.inputs.env }}" == "test" ]]; then
            echo "TEST_EMAIL=${{ secrets.TEST_EMAIL }}" >> .env.playwright.local
            echo "TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}" >> .env.playwright.local
          elif [[ "${{ github.event.inputs.env }}" == "dev" ]]; then
            echo "TEST_EMAIL=${{ secrets.DEV_EMAIL }}" >> .env.playwright.local
            echo "TEST_PASSWORD=${{ secrets.DEV_PASSWORD }}" >> .env.playwright.local
          elif [[ "${{ github.event.inputs.env }}" == "prod" ]]; then
            echo "TEST_EMAIL=${{ secrets.PROD_EMAIL }}" >> .env.playwright.local
            echo "TEST_PASSWORD=${{ secrets.PROD_PASSWORD }}" >> .env.playwright.local
          fi
      - name: Adjust project URLs # If launch is test or dev, change urls at projects-config.json
        run: |
          if [[ "${{ github.event.inputs.env }}" == "test" ]]; then
            sed -i "s|\"url\": \"$prod_atlas_url\"|\"url\": \"$test_atlas_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_disaster_ninja_url\"|\"url\": \"$test_disaster_ninja_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_smart_city_url\"|\"url\": \"$test_smart_city_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_oam_url\"|\"url\": \"$test_oam_url\"|g" e2e/projects-config.json
          elif [[ "${{ github.event.inputs.env }}" == "dev" ]]; then
            sed -i "s|\"url\": \"$prod_atlas_url\"|\"url\": \"$dev_atlas_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_disaster_ninja_url\"|\"url\": \"$dev_disaster_ninja_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_smart_city_url\"|\"url\": \"$dev_smart_city_url\"|g" e2e/projects-config.json
            sed -i "s|\"url\": \"$prod_oam_url\"|\"url\": \"$dev_oam_url\"|g" e2e/projects-config.json
          fi

      - name: Move to e2e directory # Move to e2e
        run: cd e2e

      - name: Run tests # Run tests in headless way
        run: npx playwright test

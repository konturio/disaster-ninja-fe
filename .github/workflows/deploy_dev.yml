name: Deploy to Dev

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    uses: ./.github/workflows/build.yml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  update-helm-manifests:
    needs: build-and-publish
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout CD repository
        uses: actions/checkout@v4
        with:
          repository: konturio/disaster-ninja-cd
          token: ${{ secrets.GITHUB_TOKEN }}
          path: cd

      - name: Install yq utility
        run: |
          wget -qO /tmp/yq https://github.com/mikefarah/yq/releases/download/v4.34.2/yq_linux_amd64
          chmod +x /tmp/yq
          sudo mv /tmp/yq /usr/local/bin/yq

      - name: Update image tag in values-dev.yaml
        working-directory: cd/helm/disaster-ninja-fe/values
        run: |
          IMAGE_TAG="${{ needs.build-and-publish.outputs.image_tag }}"
          echo "Updating image tag to ${IMAGE_TAG}"
          yq -i ".image.fe.tag = \"${IMAGE_TAG}\"" values-dev.yaml
          echo "New contents of values-dev.yaml:"
          cat values-dev.yaml

      - name: Bump version in Chart.yaml
        working-directory: cd/helm/disaster-ninja-fe
        run: |
          echo "Current contents of Chart.yaml:"
          cat Chart.yaml
          CURRENT_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="${major}.${minor}.${NEW_PATCH}"
          echo "Updating Chart version from $CURRENT_VERSION to $NEW_VERSION"
          yq -i ".version = \"${NEW_VERSION}\"" Chart.yaml
          echo "New contents of Chart.yaml:"
          cat Chart.yaml

      - name: Create and push changes branch
        working-directory: cd
        run: |
          BRANCH_NAME="deploy-dn-fe-dev-${{ github.run_id }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "Deploy FE: update image tag to ${{ needs.build-and-publish.outputs.image_tag }} and bump Chart version"
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.CD_GITHUB_TOKEN }}

      - name: Create Pull Request using gh
        working-directory: cd
        run: |
          BRANCH_NAME="deploy-dn-fe-dev-${{ github.run_id }}"
          gh pr create \
            --title "Deploy FE: update image tag to ${{ needs.build-and-publish.outputs.image_tag }} and bump Chart version" \
            --body "Automatically created PR to update helm manifests with the new image tag." \
            --base main --head $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.CD_GITHUB_TOKEN }}

      - name: Merge Pull Request using gh
        working-directory: cd
        run: |
          PR_NUMBER=$(gh pr list --head "deploy-dn-fe-dev-${{ github.run_id }}" --json number --jq '.[0].number')
          if [ -z "$PR_NUMBER" ]; then
            echo "No PR found for branch deploy-dn-fe-dev-${{ github.run_id }}. Exiting."
            exit 1
          fi  
          echo "Merging PR #$PR_NUMBER"
          gh pr merge $PR_NUMBER --auto --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.CD_GITHUB_TOKEN }}

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-message: |
            *Deployment Notification*
            Deploy DN FE to DEV.
            Branch: `deploy-dn-fe-dev-${{ github.run_id }}`
            Image Tag: `${{ needs.build-and-publish.outputs.image_tag }}`
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_DEV_WEBHOOK_URL }}

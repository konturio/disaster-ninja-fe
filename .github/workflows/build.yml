name: build
on:
  push:
    branches:
      - 'main'
      - 'release-*'
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
  workflow_dispatch:

env:
  NODE_ENV: production
  AVA_FORCE_CI: 'not-ci'
  REGISTRY: ghcr.io
  IMAGE_REPO: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '17'
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci --include=dev
      - run: npm run postinstall
      - run: npm run lint
      - run: npm run typecheck
      - run: npm run test:unit
      - run: npm run coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '17'
      - run: npm ci --include=dev
      - run: npm run build
      - name: Display structure of builded files
        run: ls -R
        working-directory: .
      - name: Make artifact folder for dist (workaround for actions/upload-artifact@v3 bug)
        run: mkdir ./_artifact && mv ./dist ./_artifact
        working-directory: .
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: ./_artifact

  publish:
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref_name, 'release') || github.ref_name == 'main')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        uses: docker/metadata-action@v4.0.1
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}
          tags: |
            type=raw,value=${{ github.ref_name }}.{{sha}}.${{ github.run_attempt }},enable=${{github.event_name == 'push' || github.event_name == 'workflow_dispatch'}}
            type=raw,value=${{ github.head_ref }}.{{sha}}.${{ github.run_attempt }},enable=${{github.event_name == 'pull_request'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

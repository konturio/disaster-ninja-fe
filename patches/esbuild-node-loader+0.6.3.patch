diff --git a/node_modules/esbuild-node-loader/loader.mjs b/node_modules/esbuild-node-loader/loader.mjs
index 28b1da3..7c5db86 100644
--- a/node_modules/esbuild-node-loader/loader.mjs
+++ b/node_modules/esbuild-node-loader/loader.mjs
@@ -1,15 +1,24 @@
 import { URL, pathToFileURL, fileURLToPath } from 'url'
 import fs from 'fs'
-import { dirname } from 'path'
+import path from 'path'
 import { transformSync, build } from 'esbuild'
 
 const isWindows = process.platform === 'win32'
 
+let configLoading = null;
+let userConfig = {};
+(async (configName) => {
+  const resolvedPath = path.resolve(process.cwd(), configName);
+  const fileUrl = pathToFileURL(resolvedPath);
+  configLoading = await import(fileUrl);
+  userConfig = (await configLoading).default;
+})('.esbuild-loader.js');
+
 const extensionsRegex = /\.m?(tsx?|json)$/
 
+
 async function esbuildResolve(id, dir) {
   let result
-
   await build({
     stdin: {
       contents: `import ${JSON.stringify(id)}`,
@@ -39,6 +48,7 @@ function esbuildTransformSync(rawSource, filename, url, format) {
     warnings,
     map: jsSourceMap,
   } = transformSync(rawSource.toString(), {
+    ...userConfig,
     sourcefile: filename,
     sourcemap: 'both',
     loader: new URL(url).pathname.match(extensionsRegex)[1],
@@ -107,13 +117,16 @@ export async function resolve(specifier, context, defaultResolve) {
     // and construct a valid url.
 
     const parsed = getTsCompatSpecifier(parentURL, specifier)
-    const path = await esbuildResolve(parsed.tsSpecifier, dirname(fileURLToPath(parentURL)))
-    if (path) {
-      url = pathToFileURL(path)
+    const resolvedPath = await esbuildResolve(parsed.tsSpecifier, path.dirname(fileURLToPath(parentURL)))
+    if (resolvedPath) {
+      url = pathToFileURL(resolvedPath)
       url.search = parsed.search
     }
   }
 
+  await configLoading;
+
+
   if (url) {
     // If the resolved file is typescript
     if (extensionsRegex.test(url.pathname)) {
@@ -138,7 +151,7 @@ export function load(url, context, defaultLoad) {
     let filename = url
     if (!isWindows) filename = fileURLToPath(url)
 
-    const rawSource = fs.readFileSync(new URL(url), { encoding: 'utf8' })
+    const rawSource = fs.readFileSync(new URL(url), { encoding: 'utf8' });
     const { js } = esbuildTransformSync(rawSource, filename, url, format)
 
     return {
